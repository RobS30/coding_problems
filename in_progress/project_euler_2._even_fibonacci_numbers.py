# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

# ***still in progress***


def fiboEvenSum(n):
    array_of_evens = []
    sum_of_even = 0 

    if n < 0:
        print("please enter a positive integer")

    
        if n == 0:
            array_of_evens.append(0)
        elif n == 1 or n == 2:
            array_of_evens.append(1)
        else: 
            return fiboEvenSum(n-1) + fiboEvenSum(n-2)


    sum_of_even = sum(array_of_evens,0)
    return sum_of_even



if __name__ == "__main__":
    print("Test Case 1: I should return 10")
    print(fiboEvenSum(10))

    print("Test Case 2: I should return 44")
    print(fiboEvenSum(34))
    
    print("Test Case 3: I should return 44")
    print(fiboEvenSum(60))
    
    print("Test Case 4: I should return 798")
    print(fiboEvenSum(1000))

    print("Test Case 4: I should return 60696")
    print(fiboEvenSum(100000))

    print("Test Case 4: I should return 4613732")
    print(fiboEvenSum(4000000))
